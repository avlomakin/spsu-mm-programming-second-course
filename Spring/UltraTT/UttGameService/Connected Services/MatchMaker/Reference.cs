//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UttGameService.MatchMaker {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchMaker.IMatchMakerService", CallbackContract=typeof(UttGameService.MatchMaker.IMatchMakerServiceCallback))]
    public interface IMatchMakerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakerService/Enqueue", ReplyAction="http://tempuri.org/IMatchMakerService/EnqueueResponse")]
        void Enqueue(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakerService/Enqueue", ReplyAction="http://tempuri.org/IMatchMakerService/EnqueueResponse")]
        System.Threading.Tasks.Task EnqueueAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakerService/Dequeue", ReplyAction="http://tempuri.org/IMatchMakerService/DequeueResponse")]
        void Dequeue(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakerService/Dequeue", ReplyAction="http://tempuri.org/IMatchMakerService/DequeueResponse")]
        System.Threading.Tasks.Task DequeueAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchMakerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchMakerService/MatchFound", ReplyAction="http://tempuri.org/IMatchMakerService/MatchFoundResponse")]
        void MatchFound(string opponentUsername);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchMakerServiceChannel : UttGameService.MatchMaker.IMatchMakerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchMakerServiceClient : System.ServiceModel.DuplexClientBase<UttGameService.MatchMaker.IMatchMakerService>, UttGameService.MatchMaker.IMatchMakerService {
        
        public MatchMakerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchMakerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchMakerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchMakerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchMakerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Enqueue(string username) {
            base.Channel.Enqueue(username);
        }
        
        public System.Threading.Tasks.Task EnqueueAsync(string username) {
            return base.Channel.EnqueueAsync(username);
        }
        
        public void Dequeue(string username) {
            base.Channel.Dequeue(username);
        }
        
        public System.Threading.Tasks.Task DequeueAsync(string username) {
            return base.Channel.DequeueAsync(username);
        }
    }
}
